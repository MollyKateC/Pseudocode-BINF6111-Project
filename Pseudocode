#!/usr/bin/perl
use warnings;
use strict;

############################
## Pseudocode for Project ##
############################


#Variables:
my $reference_seq;
my $bisulfite_seq;
my @Refseq;
my $Refseq;
my @Bisseq;
my $Bisseq;
my @Refseqarray;
my @Bisseqarray;
my @CCmatches;
my @TCmatches;
my $k;
my $z;


#Ask user for reference sequence(list filetype?)
print "Enter the Filename for the reference sequence: ";
$reference_seq = <STDIN>;
chomp $reference_seq;
unless( -e $reference_seq) {
	print "File \"$reference_seq\" does not seem to exist\n";
	exit;
}

#Ask user for bisulfite treated sequence
print "Enter the Filename for the bisulfite treated sequence: ";
$bisulfite_seq = <STDIN>;
chomp $bisulfite_seq;
unless( -e $bisulfite_seq) {
	print "File \"$bisulfite_seq\" does not seem to exist\n";
	exit;
}


#store files in variable

unless ( open(REFFILE, $reference_seq) ) {
	print "Cannot open file \"$reference_seq\"\n";
	exit;
}

@Refseq = <REFFILE>;
close REFFILE;

unless ( open(BISFILE, $bisulfite_seq) ) {
	print "Cannot open file \"$bisulfite_seq\"\n";
	exit;
}

@Bisseq = <BISFILE>;
close BISFILE;

#prepare files
	#remove whitespace
	#remove newlines
	#join into one string

$Refseq = join( '', @Refseq);
$Bisseq = join( '', @Bisseq);

$Refseq =~ s/\s//g;
$Bisseq =~ s/\s//g;

$Refseq =~ tr/actg/ACTG/;
$Bisseq =~ tr/actg/ACTG/;


#if ($Refseq eq $Bisseq) {
#	print "equal\n";
#} else {
#	print "unequal\n";
#}


#string to array:
@Refseqarray = split('',$Refseq);
@Bisseqarray = split('',$Bisseq);





####Looking for areas of CC matching
$k=0;

for (my $i=0; $i < scalar (@Refseqarray); $i++)
{
    if ($Refseqarray[$i] eq "C" && $Bisseqarray[$i] eq "C")
    {$CCmatches[$k] = $i;$k++;
    }
}


my $CC = join (',',@CCmatches);
print "\n C\'s match C\'s $CC \n\n";


####Looking for regions with TC matches
$z=0;

for (my $y=0; $y < scalar(@Refseqarray);$y++)
{
   if ($Refseqarray[$y] eq "C" && $Bisseqarray[$y] eq "T")
   {$TCmatches[$z] = $y;$z++;
    }
}
my $TC = join (',',@TCmatches);
print " T\'s match C\'s $TC \n";



#if (@Refseqarray eq @Bisseqarray) {
#	print "equal\n";
#} else {
#	print "unequal\n";
#}

#comparing sequences




#print "$Refseq\n $Bisseq\n";			#run to test previous script


	
	
#Search for CG regions
	#foreach /C/ {
	#	if( /GC/ | /CG/){}
	# remove duplicated regions (i.e. GCG)
	# 	else {}
	# }
	
#my %hash;
#$hash{$_}++ for (@);

	
#Store and report position of CG regions (file output)

##Compare arrays using Perl 5.1's Smartmatch Operator

#Find CG regions on reference genome array
	#store Cs in an array that has empty elements for locations where there is not a C
		#for example:
			#reference-   AAATCCAGCTTTTACGAAA
			#array of Cs- ********C*****C****, where * indicates whitespace
	#Match location of CG regions from reference genome to the bisulfite treated genome
		#clear out non-matching regions (?)
		#for example:
			#reference genome		AAATCCAGCTTTTACGAAA
			#reference C regions	********C*****C****
			#bisulfite genome		AAATTTAGTTTTTACGAAA
			#matched bisulfite		********T*****C****
			
	
	#Report Results of comparison in text file format? Spreadsheet?
	
			














